# Generated by Django 2.2.12 on 2021-02-09 16:10

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ThemeConfig",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "logo",
                    models.FileField(
                        help_text="Image will be scaled down to a height of 100 pixels. Typically upload a picture with a height of 200 pixels.",
                        upload_to="theme/",
                    ),
                ),
                ("organization_name", models.CharField(max_length=100)),
                ("tagline", models.CharField(blank=True, max_length=200)),
                ("phone_number", models.CharField(blank=True, max_length=50)),
                ("address", models.CharField(blank=True, max_length=400)),
                (
                    "color_primary",
                    models.CharField(
                        default="04a5bb",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[0-9a-fA-F]+"),
                                "Enter a valid HTML color code value consisting of only hexidecimal characters.",
                                "invalid",
                            )
                        ],
                    ),
                ),
                (
                    "color_primary_light",
                    models.CharField(
                        default="C3eaef",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[0-9a-fA-F]+"),
                                "Enter a valid HTML color code value consisting of only hexidecimal characters.",
                                "invalid",
                            )
                        ],
                    ),
                ),
                (
                    "color_secondary",
                    models.CharField(
                        default="017092",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[0-9a-fA-F]+"),
                                "Enter a valid HTML color code value consisting of only hexidecimal characters.",
                                "invalid",
                            )
                        ],
                    ),
                ),
                (
                    "color_link",
                    models.CharField(
                        default="017092",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[0-9a-fA-F]+"),
                                "Enter a valid HTML color code value consisting of only hexidecimal characters.",
                                "invalid",
                            )
                        ],
                    ),
                ),
                (
                    "color_link_dark",
                    models.CharField(
                        default="051f31",
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                re.compile("^[0-9a-fA-F]+"),
                                "Enter a valid HTML color code value consisting of only hexidecimal characters.",
                                "invalid",
                            )
                        ],
                    ),
                ),
            ],
            options={"verbose_name": "Theme configuration",},
        ),
    ]
